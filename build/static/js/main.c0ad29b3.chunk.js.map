{"version":3,"sources":["redux/actions/rootActions.js","components/pages/DetailsPage.js","components/sections/SearchSelects.js","components/pages/ComparePage.js","components/sections/ScrollView.js","components/sections/LoadMoreView.js","components/pages/ExplorePage.js","components/pages/SettingsPage.js","components/pages/ComparisonTablePage.js","components/layout/NavB.js","App.js","serviceWorker.js","redux/reducers/DevicesReducer.js","redux/reducers/ChangeViewReducer.js","redux/reducers/DetailsReducer.js","redux/reducers/rootReducer.js","index.js","redux/LocalStorage.js"],"names":["getDevices","type","payload","axios","get","then","res","data","hits","catch","err","console","log","getMobileDetails","id","mobileDetails","clearDetails","changeView","MobileDetails","this","props","match","params","Container","details","map","attribute","i","className","src","previewURL","alt","user","Table","striped","bordered","hover","key","views","tags","downloads","favorites","likes","Component","connect","state","dispatch","bindActionCreators","SearchSelects","allowSelectAll","options","allOption","onChange","selected","event","length","value","result","includes","filter","option","action","defaultProps","label","Option","checked","isSelected","MultiValue","animatedComponents","makeAnimated","ComparePage","handleChange","setState","optionSelected","newArray","undefined","Devices","device","push","Row","Col","sm","md","isMulti","closeMenuOnSelect","hideSelectedOptions","components","Button","to","pathname","selectedvalues","list","InfinityScrollView","visible","handleScroll","document","addEventListener","scrollTop","documentElement","windowHeight","window","innerHeight","body","scrollHeight","newvisible","displyedItems","slice","webformatURL","LoadMoreView","loadMore","prev","loadMoreDevices","onClick","ExplorePage","changed","SettingsPage","changeDevicesView","ComparisonTable","comparisonArray","location","imageSize","NavB","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","exact","activeStyle","color","textDecoration","borderBottom","App","path","component","ComparisonTablePage","DetailsPage","Boolean","hostname","ChangeView","toggle","newState","Object","assign","Details","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","promiseMiddleware","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPACaA,EAAa,WAYxB,MAAO,CACLC,KAAM,eACNC,QAbgBC,IACfC,IACC,8HAEDC,MAAK,SAACC,GACL,OAAOA,EAAIC,KAAKC,QAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QASX,SAASG,IAA0B,IAATC,EAAQ,uDAAH,EAChCC,EAAgBZ,IACjBC,IADiB,wIAEiHU,IAElIT,MAAK,SAACC,GACL,OAAOA,EAAIC,KAAKC,QAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhB,MAAO,CACLT,KAAM,iBACNC,QAASa,GAIN,SAASC,IACd,MAAO,CACLf,KAAM,gBACNC,QAAS,IAIN,SAASe,IACd,MAAO,CACLhB,KAAM,cACNC,QAAS,I,sBCjCPgB,E,kLAEFC,KAAKC,MAAMP,iBAAiBM,KAAKC,MAAMC,MAAMC,OAAOR,M,+BAQpD,OACE,kBAACS,EAAA,EAAD,KACGJ,KAAKC,MAAMI,QAAQA,QAClBL,KAAKC,MAAMI,QAAQA,QAAQC,KAAI,SAACC,EAAWC,GACzC,OACE,6BACE,kBAACJ,EAAA,EAAD,CAAWK,UAAU,QACnB,yBAAKA,UAAU,qBACb,yBAAKC,IAAKH,EAAUI,WAAYC,IAAKL,EAAUM,QAGjD,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,wBAAIC,IAAKV,GACP,gDACA,4BAAKD,EAAUY,QAEjB,wBAAID,IAAKV,GACP,gDACA,4BAAKD,EAAUa,OACX,IACN,wBAAIF,IAAKV,GACP,oDACA,4BAAKD,EAAUc,YACX,IACN,wBAAIH,IAAKV,GACP,oDACA,4BAAKD,EAAUe,YACX,IACN,wBAAIJ,IAAKV,GACP,gDACA,4BAAKD,EAAUgB,cAQ3B,+C,GAhDkBC,aAkEbC,eAVS,SAACC,GAAD,MAAY,CAClCrB,QAASqB,EAAMrB,YAIU,SAACsB,GAC1B,OAAOC,6BAAmB,CAAElC,mBAAkBG,gBAAgB8B,KAIjDF,CAA6C1B,G,mECzEtD8B,EAAgB,SAAC5B,GACrB,OAAIA,EAAM6B,eAEN,kBAAC,IAAD,iBACM7B,EADN,CAEE8B,QAAO,CAAG9B,EAAM+B,WAAT,mBAAuB/B,EAAM8B,UACpCE,SAAU,SAACC,EAAUC,GACnB,GAAiB,OAAbD,GAAqBA,EAASE,OAAS,EAAG,CAC5C,GAAIF,EAASA,EAASE,OAAS,GAAGC,QAAUpC,EAAM+B,UAAUK,MAC1D,OAAOpC,EAAMgC,SAAN,CAAgBhC,EAAM+B,WAAtB,mBAAoC/B,EAAM8B,WAEnD,IAAIO,EAAS,GACb,GAAIJ,EAASE,SAAWnC,EAAM8B,QAAQK,OAQpC,OAPIF,EAASK,SAAStC,EAAM+B,WAC1BM,EAASJ,EAASM,QAChB,SAACC,GAAD,OAAYA,EAAOJ,QAAUpC,EAAM+B,UAAUK,SAErB,kBAAjBF,EAAMO,SACfJ,EAAM,CAAIrC,EAAM+B,WAAV,mBAAwB/B,EAAM8B,WAE/B9B,EAAMgC,SAASK,GAI1B,OAAOrC,EAAMgC,SAASC,OAMvB,kBAAC,IAAgBjC,IAc1B4B,EAAcc,aAAe,CAC3BX,UAAW,CACTY,MAAO,aACPP,MAAO,MAIIR,QCrCTgB,EAAS,SAAC5C,GACd,OACE,6BACE,kBAAC,IAAW4C,OAAW5C,EACrB,2BACEnB,KAAK,WACLgE,QAAS7C,EAAM8C,WACfd,SAAU,kBAAM,QACf,IACH,+BAAQhC,EAAM2C,UAMhBI,EAAa,SAAC/C,GAAD,OACjB,kBAAC,IAAW+C,WAAe/C,EACzB,8BAAOA,EAAMb,KAAKwD,SAIhBK,EAAqBC,cACrBC,E,kDACJ,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAORmD,aAAe,SAAClB,GACd,EAAKmB,SAAS,CACZC,eAAgBpB,KARlB,EAAKR,MAAQ,CACX4B,eAAgB,IAHD,E,qDAejB,IAAIC,EAAW,GACf,YAA2BC,IAAvBxD,KAAKC,MAAMwD,QAKN,MAJPzD,KAAKC,MAAMwD,QAAQnD,KAAI,SAACoD,GACtB,OAAOH,EAASI,KAAK,CAAEtB,MAAOqB,EAAO7C,KAAM+B,MAAOc,EAAO7C,UAM3D,kBAAC,IAAD,CAAWJ,UAAU,gBACnB,+FACA,kBAACmD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACd,IACD,kBAAC,EAAD,CACEhC,QAASwB,EACTS,SAAO,EACPC,mBAAmB,EACnBC,qBAAqB,EACrBC,WAAY,CAAEtB,SAAQG,aAAYC,sBAClChB,SAAUjC,KAAKoD,aAEff,MAAOrC,KAAK0B,MAAM4B,iBAEpB,kBAACc,EAAA,EAAD,CAAQ3D,UAAU,QAChB,kBAAC,IAAD,CACE4D,GAAI,CACFC,SAAU,cACVC,eAAgBvE,KAAK0B,MAAM4B,iBAH/B,wB,GAzCY9B,aAoEXC,eAVS,SAACC,GACvB,MAAO,CAAE+B,QAAS/B,EAAM+B,QAAQe,SAIP,SAAC7C,GAC1B,OAAOC,6BAAmB,CAAE/C,cAAc8C,KAI7BF,CAA6C0B,GCtGvCsB,E,kDACnB,aAAe,IAAD,8BACZ,gBACK/C,MAAQ,CACXgD,QAAS,IAEX,EAAKC,eALO,E,2DASE,IAAD,OACbC,SAASC,iBAAiB,UAAU,WAClC,IAAIC,EAAYF,SAASG,gBAAgBD,UACvCE,EAAeC,OAAOC,YAGxB,GADqBJ,GADVF,SAASO,KAAKC,aAAeJ,GAEjB,GAAK,CAC1B,IAAIK,EAAa,EAAK3D,MAAMgD,QAAU,GACtC,EAAKrB,SAAS,CACZqB,QAASW,U,+BAMf,IACEC,EADUtF,KAAKC,MAAMwD,QAAQ8B,MAAM,EAAGvF,KAAK0B,MAAMgD,SAC3BpE,KAAI,SAACoD,GACzB,OACE,kBAACG,EAAA,EAAD,CAAKC,GAAI,GAAIrD,UAAU,eACrB,kBAAC,IAAD,CAAM4D,GAAE,mBAAcX,EAAO/D,KAC3B,yBACEe,IAAKgD,EAAO8B,aACZ5E,IAAK8C,EAAOtC,KACZX,UAAU,cAJd,KAQA,4BAAKiD,EAAO7C,UAIpB,OACE,kBAAC,IAAD,CAAWJ,UAAU,mBACnB,kBAACmD,EAAA,EAAD,KAAM0B,EAAN,U,GA3CwC9D,a,2BCA3BiE,E,kDACnB,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IAORyF,SAAW,WACT,EAAKrC,UAAS,SAACsC,GACb,MAAO,CAAEjB,QAASiB,EAAKjB,QAAU,QARnC,EAAKhD,MAAQ,CACXgD,QAAS,IAHM,E,qDAejB,IAAIkB,EAAkB5F,KAAKC,MAAMwD,QAAQ8B,MAAM,EAAGvF,KAAK0B,MAAMgD,SAASpE,KACpE,SAACoD,GACC,OACE,kBAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,EAAG7C,IAAKwC,EAAO/D,IAC9B,kBAAC,IAAD,CAAM0E,GAAE,mBAAcX,EAAO/D,KAC3B,yBACEe,IAAKgD,EAAO8B,aACZ5E,IAAK8C,EAAOtC,KACZX,UAAU,cAJd,KAQA,4BAAKiD,EAAO7C,MAAW,QAM/B,OACE,kBAACT,EAAA,EAAD,CAAWK,UAAU,iBACnB,kBAAC,IAAD,KAAMmF,GACL5F,KAAK0B,MAAMgD,QAAU1E,KAAKC,MAAMwD,QAAQrB,QACvC,yBAAK3B,UAAU,yBACb,kBAAC,IAAD,CAAQoF,QAAS7F,KAAK0F,UAAtB,mB,GAvC8BlE,aCEpCsE,E,kLAEF9F,KAAKC,MAAMpB,e,+BAGX,OACE,6BACGmB,KAAKC,MAAMwD,QAAQe,KAClBxE,KAAKC,MAAM8F,QACT,kBAAC,EAAD,CAActC,QAASzD,KAAKC,MAAMwD,QAAQe,OAE1C,kBAAC,EAAD,CAAYf,QAASzD,KAAKC,MAAMwD,QAAQe,OAG1C,+C,GAdgBhD,aAiCXC,eAXS,SAACC,GAAD,MAAY,CAClC+B,QAAS/B,EAAM+B,QACfsC,QAASrE,EAAMqE,QAAQA,YAIE,SAACpE,GAC1B,OAAOC,6BAAmB,CAAE/C,cAAc8C,KAI7BF,CAA6CqE,GCjCtDE,E,4MACJC,kBAAoB,WAGlB,GADA,EAAKhG,MAAMH,kBACgB0D,IAAvB,EAAKvD,MAAM8F,QAEb,OAAO,M,uDAKT,OACE,kBAAC,IAAD,CAAWtF,UAAU,iBACnB,oCACA,wBAAIA,UAAU,QAAd,qBACwB,IAAvBT,KAAKC,MAAM8F,QACV,kBAACnC,EAAA,EAAD,CAAKnD,UAAU,aACb,kBAACoD,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,GACd,kBAACM,EAAA,EAAD,CAAQyB,QAAS7F,KAAKiG,mBACpB,uBAAGxF,UAAU,8BACL,KACL,IACP,kBAACoD,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,GACd,wDAIJ,kBAACF,EAAA,EAAD,CAAKnD,UAAU,aACb,kBAACoD,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,GACd,kBAACM,EAAA,EAAD,CAAQyB,QAAS7F,KAAKiG,mBACpB,uBAAGxF,UAAU,6BACL,KACL,IACP,kBAACoD,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,GACd,4D,GAlCatC,aAsDZC,eAVS,SAACC,GACvB,MAAO,CAAEqE,QAASrE,EAAMqE,QAAQA,YAIP,SAACpE,GAC1B,OAAOC,6BAAmB,CAAE9B,cAAc6B,KAI7BF,CAA6CuE,GCtDtDE,E,kDACJ,WAAYjG,GAAQ,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACXyE,gBAAiB,IAHF,E,gEAME,IAAD,OAIlB,GAHAnG,KAAKC,MAAMpB,kBAGgB2E,IAAvBxD,KAAKC,MAAMwD,QAeb,OAAO,KAdPzD,KAAKC,MAAMwD,QAAQnD,KAAI,SAACoD,GACtB,YAA2CF,IAAvC,EAAKvD,MAAMmG,SAAS7B,eACf,EAAKtE,MAAMmG,SAAS7B,eAAejE,KAAI,SAAC4B,GAC7C,OAAIwB,EAAO7C,OAASqB,EAASG,MACpB,EAAKX,MAAMyE,gBAAgBxC,KAAKD,GAEhC,QAIJ,U,+BAQb,OACE,kBAACtD,EAAA,EAAD,KACE,wBAAIK,UAAU,QAAd,6DAGA,kBAACK,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,wCACA,mCACA,qCACA,yCACA,yCACA,uCAGJ,+BACGjB,KAAK0B,MAAMyE,gBACRnG,KAAK0B,MAAMyE,gBAAgB7F,KAAI,SAACoD,EAAQlD,GAAT,OAC7B,wBAAIU,IAAKV,GACP,uCAAakD,EAAO/D,IACpB,4BAAK+D,EAAO/D,IACZ,4BAAK+D,EAAOnC,OACZ,4BAAKmC,EAAOpC,WACZ,4BAAKoC,EAAO2C,WACZ,4BAAK3C,EAAOvC,WAGhB,OAEC,S,GA5DaK,aA4EfC,eAVS,SAACC,GACvB,MAAO,CAAE+B,QAAS/B,EAAM+B,QAAQe,SAIP,SAAC7C,GAC1B,OAAOC,6BAAmB,CAAE/C,cAAc8C,KAI7BF,CAA6CyE,G,kBC9EvCI,E,uKAEjB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKhG,UAAU,UAC7C,kBAAC8F,EAAA,EAAOG,MAAR,CAAcC,KAAK,MAEnB,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBnH,GAAG,yBAClB,kBAACoH,EAAA,EAAD,CAAKtG,UAAU,IACb,kBAAC,IAAD,CACEuG,OAAK,EACL3C,GAAG,IACH4C,YAAa,CACXC,MAAO,UACPC,eAAgB,OAChBC,aAAc,sBANlB,WAWA,kBAAC,IAAD,CACEJ,OAAK,EACL3C,GAAG,WACH4C,YAAa,CACXC,MAAO,UACPC,eAAgB,OAChBC,aAAc,sBANlB,WAWA,kBAAC,IAAD,CACEJ,OAAK,EACL3C,GAAG,YACH4C,YAAa,CACXC,MAAO,UACPC,eAAgB,OAChBC,aAAc,sBANlB,oB,GAhCoB5F,aCOb6F,I,8KAEjB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOL,OAAK,EAACM,KAAK,IAAIC,UAAWzB,IACjC,kBAAC,IAAD,CAAOkB,OAAK,EAACM,KAAK,WAAWC,UAAWpE,IACxC,kBAAC,IAAD,CAAO6D,OAAK,EAACM,KAAK,cAAcC,UAAWC,IAC3C,kBAAC,IAAD,CAAOR,OAAK,EAACM,KAAK,YAAYC,UAAWvB,IACzC,kBAAC,IAAD,CAAOgB,OAAK,EAACM,KAAK,eAAeC,UAAWE,U,GAVrBjG,cCHbkG,QACW,cAA7BzC,OAAOmB,SAASuB,UAEe,UAA7B1C,OAAOmB,SAASuB,UAEhB1C,OAAOmB,SAASuB,SAASzH,MACvB,2D,aCJSuD,GAdC,WAAyB,IAAxB/B,EAAuB,uDAAf,GAAIgB,EAAW,uCACtC,OAAQA,EAAO5D,MACb,IAAK,eACH,OAAO,6BAAK4C,GAAZ,IAAmB8C,KAAM9B,EAAO3D,UAGlC,IAAK,cACH,OAAO,6BAAK2C,GAAZ,IAAmBrB,QAASqC,EAAO3D,UAGrC,QACE,OAAO2C,ICGEkG,GAdI,WAA4B,IAA3BlG,EAA0B,wDAAXgB,EAAW,uCAC5C,SAASmF,EAAOnG,GACd,IAAIoG,EAAWC,OAAOC,OAAO,GAAItG,GAEjC,OADAoG,EAAS/B,SAAW+B,EAAS/B,QACtB+B,EAET,OAAQpF,EAAO5D,MACb,IAAK,cACH,OAAO+I,EAAOnG,GAChB,QACE,OAAOA,ICCEuG,GAXC,WAAyB,IAAxBvG,EAAuB,uDAAf,GAAIgB,EAAW,uCACtC,OAAQA,EAAO5D,MACb,IAAK,iBAEL,IAAK,gBACH,OAAO,6BAAK4C,GAAZ,IAAmBrB,QAASqC,EAAO3D,UAErC,QACE,OAAO2C,ICGEwG,GANKC,0BAAgB,CAClC1E,WACAsC,QAAS6B,GACTvH,QAAS4H,K,sCCULG,GClBmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAO9I,GACP,QDUmBmJ,GACjBC,GAAa,CAACC,MACdC,GAAQC,sBACZZ,GACAE,GACAW,+BAAoBC,kBAAe,WAAf,GAAgBC,MAAhB,OAAsCN,OAG5DE,GAAMK,WAAU,YCdS,SAACxH,GACxB,IACE,IAAM2G,EAAkBG,KAAKW,UAAUzH,GACvC4G,aAAac,QAAQ,QAASf,GAC9B,WDWFgB,CAAU,CACRtD,QAAS8C,GAAMS,WAAWvD,QAC1BtC,QAASoF,GAAMS,WAAW7F,aAG9B8F,IAASC,OACL,kBAAC,IAAD,CAAUX,MAAOA,IACf,kBAAC,GAAD,OAGJjE,SAAS6E,eAAe,SL4FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1K,MAAK,SAAC2K,GAClCA,EAAaC,iB","file":"static/js/main.c0ad29b3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport const getDevices = () => {\r\n  let mobilesData = axios\r\n    .get(\r\n      \"https://pixabay.com/api/?key=11295366-e4d7e8eab0c39f30afd0e7330&q=yellow+flowers&image_type=photo&pretty=true&per_page=100\"\r\n    )\r\n    .then((res) => {\r\n      return res.data.hits;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n  return {\r\n    type: \"MOBILES_LIST\",\r\n    payload: mobilesData,\r\n  };\r\n};\r\n\r\nexport function getMobileDetails(id = 0) {\r\n  let mobileDetails = axios\r\n    .get(\r\n      `https://pixabay.com/api/?key=11295366-e4d7e8eab0c39f30afd0e7330&q=yellow+flowers&image_type=photo&pretty=true&per_page=100&id=${id}`\r\n    )\r\n    .then((res) => {\r\n      return res.data.hits;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  return {\r\n    type: \"MOBILE_DETAILS\",\r\n    payload: mobileDetails,\r\n  };\r\n}\r\n\r\nexport function clearDetails(id = 0) {\r\n  return {\r\n    type: \"CLEAR_DETAILS\",\r\n    payload: {},\r\n  };\r\n}\r\n\r\nexport function changeView() {\r\n  return {\r\n    type: \"CHANGE_VIEW\",\r\n    payload: {},\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n// Redux Connection\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  getMobileDetails,\r\n  clearDetails,\r\n} from \"../../redux/actions/rootActions\";\r\n\r\n// BootStrap\r\nimport { Container, Table } from \"react-bootstrap\";\r\n\r\nclass MobileDetails extends Component {\r\n  componentDidMount() {\r\n    this.props.getMobileDetails(this.props.match.params.id);\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   this.props.clearDetails();\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.details.details ? (\r\n          this.props.details.details.map((attribute, i) => {\r\n            return (\r\n              <div>\r\n                <Container className=\"pt-5\">\r\n                  <div className=\" text-center py-3\">\r\n                    <img src={attribute.previewURL} alt={attribute.user} />\r\n                  </div>\r\n\r\n                  <Table striped bordered hover>\r\n                    <tr key={i}>\r\n                      <th>Number of views:</th>\r\n                      <td>{attribute.views}</td>\r\n                    </tr>\r\n                    <tr key={i}>\r\n                      <th>Number of tags: </th>\r\n                      <td>{attribute.tags}</td>\r\n                    </tr>{\" \"}\r\n                    <tr key={i}>\r\n                      <th>Number of downloads:</th>\r\n                      <td>{attribute.downloads}</td>\r\n                    </tr>{\" \"}\r\n                    <tr key={i}>\r\n                      <th>Number of favorites:</th>\r\n                      <td>{attribute.favorites}</td>\r\n                    </tr>{\" \"}\r\n                    <tr key={i}>\r\n                      <th>Number of likes:</th>\r\n                      <td>{attribute.likes}</td>\r\n                    </tr>\r\n                  </Table>\r\n                </Container>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <h1>...loading</h1>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// Redux State\r\nconst mapStateToProps = (state) => ({\r\n  details: state.details,\r\n});\r\n\r\n// Redux Action\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ getMobileDetails, clearDetails }, dispatch);\r\n};\r\n\r\n// Connect Component With Redux\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileDetails);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Library\r\nimport { default as ReactSelect } from \"react-select\";\r\n\r\nconst SearchSelects = (props) => {\r\n  if (props.allowSelectAll) {\r\n    return (\r\n      <ReactSelect\r\n        {...props}\r\n        options={[props.allOption, ...props.options]}\r\n        onChange={(selected, event) => {\r\n          if (selected !== null && selected.length > 0) {\r\n            if (selected[selected.length - 1].value === props.allOption.value) {\r\n              return props.onChange([props.allOption, ...props.options]);\r\n            }\r\n            let result = [];\r\n            if (selected.length === props.options.length) {\r\n              if (selected.includes(props.allOption)) {\r\n                result = selected.filter(\r\n                  (option) => option.value !== props.allOption.value\r\n                );\r\n              } else if (event.action === \"select-option\") {\r\n                result = [props.allOption, ...props.options];\r\n              }\r\n              return props.onChange(result);\r\n            }\r\n          }\r\n\r\n          return props.onChange(selected);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <ReactSelect {...props} />;\r\n};\r\n\r\nSearchSelects.propTypes = {\r\n  options: PropTypes.array,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func,\r\n  allowSelectAll: PropTypes.bool,\r\n  allOption: PropTypes.shape({\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n  }),\r\n};\r\n\r\nSearchSelects.defaultProps = {\r\n  allOption: {\r\n    label: \"Select all\",\r\n    value: \"*\",\r\n  },\r\n};\r\n\r\nexport default SearchSelects;\r\n","import React, { Component } from \"react\";\r\n\r\n// libraries\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { components } from \"react-select\";\r\n\r\n// BootStrap\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\n// Components\r\nimport SearchSelects from \"../sections/SearchSelects\";\r\n\r\n// Router Link\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Redux Connection\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getDevices } from \"../../redux/actions/rootActions\";\r\n\r\nconst Option = (props) => {\r\n  return (\r\n    <div>\r\n      <components.Option {...props}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={props.isSelected}\r\n          onChange={() => null}\r\n        />{\" \"}\r\n        <label>{props.label}</label>\r\n      </components.Option>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MultiValue = (props) => (\r\n  <components.MultiValue {...props}>\r\n    <span>{props.data.label}</span>\r\n  </components.MultiValue>\r\n);\r\n\r\nconst animatedComponents = makeAnimated();\r\nclass ComparePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      optionSelected: [], // Array Of Selected Devices\r\n    };\r\n  }\r\n\r\n  // Handle Selected items\r\n  handleChange = (selected) => {\r\n    this.setState({\r\n      optionSelected: selected,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let newArray = [];\r\n    if (this.props.Devices !== undefined) {\r\n      this.props.Devices.map((device) => {\r\n        return newArray.push({ value: device.user, label: device.user });\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n    return (\r\n      <Container className=\"compare-page\">\r\n        <p>You can search and choose any 2 devices and compare between them</p>\r\n        <Row>\r\n          <Col sm={12} md={6}>\r\n            {\" \"}\r\n            <SearchSelects\r\n              options={newArray}\r\n              isMulti\r\n              closeMenuOnSelect={false}\r\n              hideSelectedOptions={false}\r\n              components={{ Option, MultiValue, animatedComponents }}\r\n              onChange={this.handleChange}\r\n              // allowSelectAll={true}\r\n              value={this.state.optionSelected}\r\n            />\r\n            <Button className=\"mt-4\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/Comparison\",\r\n                  selectedvalues: this.state.optionSelected,\r\n                }}\r\n              >\r\n                Compare Now\r\n              </Link>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// Redux State \r\nconst mapStateToProps = (state) => {\r\n  return { Devices: state.Devices.list };\r\n};\r\n\r\n// Redux Action \r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ getDevices }, dispatch);\r\n};\r\n\r\n// Connect Component With Redux \r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComparePage);\r\n","import React, { Component } from \"react\";\r\n\r\n// Router Link \r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Bootstrap \r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nexport default class InfinityScrollView extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visible: 10, //visible devices\r\n    };\r\n    this.handleScroll();\r\n  }\r\n\r\n  //Function to handle scroll View\r\n  handleScroll() {\r\n    document.addEventListener(\"scroll\", () => {\r\n      let scrollTop = document.documentElement.scrollTop,\r\n        windowHeight = window.innerHeight,\r\n        height = document.body.scrollHeight - windowHeight,\r\n        scrollPercentage = scrollTop / height;\r\n      if (scrollPercentage > 0.9) {\r\n        let newvisible = this.state.visible + 10;\r\n        this.setState({\r\n          visible: newvisible,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    let items = this.props.Devices.slice(0, this.state.visible),\r\n      displyedItems = items.map((device) => {\r\n        return (\r\n          <Col sm={12} className=\"text-center\">\r\n            <Link to={`/mobiles/${device.id}`}>\r\n              <img\r\n                src={device.webformatURL}\r\n                alt={device.tags}\r\n                className=\"img-fluid\"\r\n              />\r\n              ;\r\n            </Link>\r\n            <h5>{device.user}</h5>\r\n          </Col>\r\n        );\r\n      });\r\n    return (\r\n      <Container className=\"scrollable-page\">\r\n        <Row>{displyedItems} </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n// Router Link\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// BootStrap\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nexport default class LoadMoreView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: 10, //visible devices\r\n    };\r\n  }\r\n\r\n  //Function to load more 10 devices\r\n  loadMore = () => {\r\n    this.setState((prev) => {\r\n      return { visible: prev.visible + 10 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let loadMoreDevices = this.props.Devices.slice(0, this.state.visible).map(\r\n      (device) => {\r\n        return (\r\n          <Col sm={12} md={6} key={device.id}>\r\n            <Link to={`/mobiles/${device.id}`}>\r\n              <img\r\n                src={device.webformatURL}\r\n                alt={device.tags}\r\n                className=\"img-fluid\"\r\n              />\r\n              ;\r\n            </Link>\r\n            <h5>{device.user}</h5>{\" \"}\r\n          </Col>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <Container className=\"loadMore-Page\">\r\n        <Row>{loadMoreDevices}</Row>\r\n        {this.state.visible < this.props.Devices.length && (\r\n          <div className=\"text-center mt-4 mb-4\">\r\n            <Button onClick={this.loadMore}>Load more</Button>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// Components\r\nimport ScrollView from \"../sections/ScrollView\";\r\nimport LoadMoreView from \"../sections/LoadMoreView\";\r\n\r\n// Redux Connection\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getDevices } from \"../../redux/actions/rootActions\";\r\n\r\nclass ExplorePage extends Component {\r\n  componentDidMount() {\r\n    this.props.getDevices(); //get all devices from redux store\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.Devices.list ? (\r\n          this.props.changed ? (\r\n            <LoadMoreView Devices={this.props.Devices.list} />\r\n          ) : (\r\n            <ScrollView Devices={this.props.Devices.list} />\r\n          )\r\n        ) : (\r\n          <h1>No Devices</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Redux State\r\nconst mapStateToProps = (state) => ({\r\n  Devices: state.Devices,\r\n  changed: state.changed.changed,\r\n});\r\n\r\n// Redux Action\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ getDevices }, dispatch);\r\n};\r\n\r\n// Connect Component With Redux\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage);\r\n","import React, { Component } from \"react\";\r\n\r\n// Bootstrap \r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\n\r\n// Redux Connection \r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeView } from \"../../redux/actions/rootActions\";\r\n\r\nclass SettingsPage extends Component {\r\n  changeDevicesView = () => {\r\n    // Function to Change View\r\n    this.props.changeView();\r\n    if (this.props.changed !== undefined) {\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"settings-page\">\r\n        <h3>View</h3>\r\n        <h5 className=\"pt-4\">Your preferences</h5>\r\n        {this.props.changed === true ? (\r\n          <Row className=\"ml-5 pl-5\">\r\n            <Col md={1} sm={3}>\r\n              <Button onClick={this.changeDevicesView}>\r\n                <i className=\"fas fa-toggle-off fa-2x \"></i>\r\n              </Button>{\" \"}\r\n            </Col>{\" \"}\r\n            <Col md={3} sm={6}>\r\n              <h6>Scrollable View is OFF</h6>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"ml-5 pl-5\">\r\n            <Col md={1} sm={3}>\r\n              <Button onClick={this.changeDevicesView}>\r\n                <i className=\"fas fa-toggle-on fa-2x \"></i>\r\n              </Button>{\" \"}\r\n            </Col>{\" \"}\r\n            <Col md={3} sm={6}>\r\n              <h6>Scrollable View is ON</h6>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// Redux Action \r\nconst mapStateToProps = (state) => {\r\n  return { changed: state.changed.changed };\r\n};\r\n\r\n// Redux Action \r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ changeView }, dispatch);\r\n};\r\n\r\n// Connect Component With Redux \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);\r\n","import React, { Component } from \"react\";\r\n\r\n// Redux Connection\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getDevices } from \"../../redux/actions/rootActions\";\r\n\r\n// Bootstrap\r\nimport { Table, Container } from \"react-bootstrap\";\r\n\r\nclass ComparisonTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comparisonArray: [], //Array of Selected Devices\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getDevices(); //get all devices from redux store\r\n\r\n    // Compare between selected items and all devices returned from api\r\n    if (this.props.Devices !== undefined) {\r\n      this.props.Devices.map((device) => {\r\n        if (this.props.location.selectedvalues !== undefined) {\r\n          return this.props.location.selectedvalues.map((selected) => {\r\n            if (device.user === selected.value) {\r\n              return this.state.comparisonArray.push(device);\r\n            } else {\r\n              return null;\r\n            }\r\n          });\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h4 className=\"pb-4\">\r\n          Here's The comparison between the devices you have chosen\r\n        </h4>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Device #</th>\r\n              <th>ID </th>\r\n              <th>Likes</th>\r\n              <th>favorites</th>\r\n              <th>imageSize</th>\r\n              <th>views</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.comparisonArray\r\n              ? this.state.comparisonArray.map((device, i) => (\r\n                  <tr key={i}>\r\n                    <td>Device #{device.id}</td>\r\n                    <td>{device.id}</td>\r\n                    <td>{device.likes}</td>\r\n                    <td>{device.favorites}</td>\r\n                    <td>{device.imageSize}</td>\r\n                    <td>{device.views}</td>\r\n                  </tr>\r\n                ))\r\n              : null}\r\n          </tbody>\r\n        </Table>{\" \"}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n// Redux State\r\nconst mapStateToProps = (state) => {\r\n  return { Devices: state.Devices.list };\r\n};\r\n\r\n// Redux Action\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ getDevices }, dispatch);\r\n};\r\n\r\n/* Connect Component With Redux */\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComparisonTable);\r\n","import React, { Component } from \"react\";\r\n\r\n// BootStrap \r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n// Router Links \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class NavB extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" className=\"navbar\">\r\n          <Navbar.Brand href=\"/\"></Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"\">\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                activeStyle={{\r\n                  color: \"#2C9CB7\",\r\n                  textDecoration: \"none\",\r\n                  borderBottom: \"5px solid #2C9CB7\",\r\n                }}\r\n              >\r\n                Explore\r\n              </NavLink>\r\n              <NavLink\r\n                exact\r\n                to=\"/Compare\"\r\n                activeStyle={{\r\n                  color: \"#2C9CB7\",\r\n                  textDecoration: \"none\",\r\n                  borderBottom: \"5px solid #2C9CB7\",\r\n                }}\r\n              >\r\n                Compare\r\n              </NavLink>\r\n              <NavLink\r\n                exact\r\n                to=\"/Settings\"\r\n                activeStyle={{\r\n                  color: \"#2C9CB7\",\r\n                  textDecoration: \"none\",\r\n                  borderBottom: \"5px solid #2C9CB7\",\r\n                }}\r\n              >\r\n                Settings\r\n              </NavLink>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n/*Components*/\n\nimport DetailsPage from \"./components/pages/DetailsPage\";\nimport ComparePage from \"./components/pages/ComparePage\";\nimport ExplorePage from \"./components/pages/ExplorePage\";\nimport SettingsPage from \"./components/pages/SettingsPage\";\nimport ComparisonTablePage from \"./components/pages/ComparisonTablePage\";\nimport NavB from \"./components/layout/NavB\";\n\n/*Styling*/\n\nimport \"./App.css\";\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <NavB />\n          <Route exact path=\"/\" component={ExplorePage} />\n          <Route exact path=\"/Compare\" component={ComparePage} />\n          <Route exact path=\"/Comparison\" component={ComparisonTablePage} />\n          <Route exact path=\"/Settings\" component={SettingsPage} />\n          <Route exact path=\"/mobiles/:id\" component={DetailsPage} />\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const Devices = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"MOBILES_LIST\": {\r\n      return { ...state, list: action.payload };\r\n    }\r\n\r\n    case \"CAR_DETAILS\": {\r\n      return { ...state, details: action.payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Devices;\r\n","const ChangeView = (state = false, action) => {\r\n  function toggle(state) {\r\n    var newState = Object.assign({}, state);\r\n    newState.changed = !newState.changed;\r\n    return newState;\r\n  }\r\n  switch (action.type) {\r\n    case \"CHANGE_VIEW\":\r\n      return toggle(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ChangeView;\r\n","const Details = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"MOBILE_DETAILS\":\r\n      return { ...state, details: action.payload };\r\n    case \"CLEAR_DETAILS\": {\r\n      return { ...state, details: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Details;\r\n","import { combineReducers } from \"redux\";\r\nimport Devices from \"./DevicesReducer\";\r\nimport ChangeView from \"./ChangeViewReducer\";\r\nimport Details from \"./DetailsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Devices,\r\n  changed: ChangeView,\r\n  details: Details,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/* Redux Connections */\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport promiseMiddleware from \"redux-promise\";\n\n/* LocalStorage Functions */\nimport { loadState } from \"./redux/LocalStorage\";\nimport { saveState } from \"./redux/LocalStorage\";\n\nconst persistedState = loadState();\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeWithDevTools(applyMiddleware(promiseMiddleware, ...middleware))\n);\n\nstore.subscribe(() => {\n  saveState({\n    changed: store.getState().changed,\n    Devices: store.getState().Devices,\n  });\n});\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n"],"sourceRoot":""}